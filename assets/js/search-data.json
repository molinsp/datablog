{
  
    
        "post0": {
            "title": "The Astra Zeneca Covid Vaccine, innocent until proven guilty",
            "content": "Goal . This analysis aims to make it easier for you to understand the risks of the Astra Zeneca vaccine using data &amp; visualizations. . Specifically, we use data from the latest report of the European Medical Agency, which was last updated on April 7th (report can be downloaded here). . . Warning: The author is not an expert in the field and applies some general statistical thinking to the problem. Therefore, it may contain errors, omissions, or otherwise not accurate information. . Methodology . Introduction . The EMA report performs some observed to expected analysis (OE) to understand the vaccine&#39;s potential risks. We will focus on the study of EudraVigilance data (page 17, section 3.1.5 in the report), which looks at three potential categories of side-effects present in the database: . Disseminated intravascular coagulation | Cerebral Venous Sinus Thrombosis | Embolic and thrombotic events | . . Note: EudraVigilance is a database with information about suspected adverse reactions to medicines that have been authorized or being studied in clinical trials in the European Economic Area (EEA). Source . Expected to observed analysis . This type of analysis compares how many cases of a given condition or side-effect have been observed (observed) with the number of cases one would expect based on the incidence, i.e., the historical number of cases (expected). It is defined as a ratio in the following way: # of observed cases / # expected cases. If it is larger than 1, you are getting more cases than you &quot;theoretically should.&quot; . But statistical uncertainty will often be driven by the observed number of cases, which is often small (rare events). To deal with this statistical uncertainty around the total number of cases observed over the risk period of interest, a 95% confidence interval (often indicated as 95%CI) is often used (more on this later). . Data sources . A key input for the analysis is the incidence rate of the side-effect. It is required to be able to determine the expected cases. It is also important to have data stratified by groups to be able to understand the effects for individual subgroups and not just the overall population. That is because the OE ratio can be &lt;1 for the overall population but out of proportion for individual subgroups who are more at risk (e.g., young people, people with certain pre-conditions, etc.). . The report uses incidence data from 3 different data sources: . Coagulation disorder: ARS from Italy | Disseminated intravascular coagulation: FISABIO from Spain | Cerebral venous sinus thrombosis: ARS from Italy | . . Note: The incidence rate is a measure of the frequency with which a disease or other incident occurs over a specified time period. Source) . OE Analysis of potential side-effects . Disseminated intravascular coagulation (DIC) . Disseminated intravascular coagulation (DIC) is a rare but serious condition that causes abnormal blood clotting throughout the body’s blood vessels. It is caused by another disease or condition, such as an infection or injury, that makes the body’s normal blood clotting process become overactive. Source . For those of us that are not medical experts, this diagram helps us understand the condition: it shows a thrombus (blood clot) that has blocked a blood vessel valve. . . To perform the OE analysis, we need to compute how many people are &quot;expected&quot; to get the condition based on the incident rate (in the DIC case, using FISABIO data from Spain) and the number of people that have taken the vaccine. . When performing the OE analysis, we see that for age groups above 50, there are more expected cases than observed cases (blue bar is larger than red bar), and therefore it is clear there is no risk. . . . But for ages below 50, there are more observed cases than expected. Let&#39;s run through one example to understand this better: . In the case of 30-49, we expect 2 cases but get 4. This means the ratio of observed to expected is about 2, i.e., we get more instances of DIC than we expect. But the confidence interval tells us that in 95% of cases, the number of observed will fall between 0.54 and 5.16. . . . Because the OE ratio is 2, we can&#39;t confidently conclude that the vaccine leads to more DIC cases. If the number was &gt;5, it would mean it is very unlikely to get that number of cases by chance (outside 95% of cases) and thus worrisome. . To understand this, you can think of flipping a coin. On average, you get 50% heads, but within 100 coin flips, you could get more heads or more tails. The question we ask is similar to trying to understand if a coin has been tampered with based on the number of heads you obtained in 100 coin flips. If the number of coin flips is above the 95% CI, you would know it is very unlikely to get that result by chance, and thus there is a strong signal that the coin has been tampered with. . Something worth discussing is that many of the patients who are getting the vaccinations are probably not the most healthy (if we assume that some rational prioritization is taking place). Given this, it is fair to assume the incidence may be higher in this group than in the general population. . Unfortunately, it seems that with the given data, we can&#39;t control for that. And this brings us to one of the main conclusions of this analysis: We don&#39;t have good health data to answer these questions. For example, it is not easy to get the incidence rate breakdown by male/female or by pre-conditions and compare it with the observed cases. . Cerebral Venous Sinus Thrombosis . Cerebral venous sinus thrombosis (CVST) occurs when a blood clot forms in the brain’s venous sinuses. This prevents blood from draining out of the brain. As a result, blood cells may break and leak blood into the brain tissues, forming a hemorrhage. This chain of events is part of a stroke that can occur in adults and children. It can occur even in newborns and babies in the womb. A stroke can damage the brain and central nervous system. A stroke is serious and requires immediate medical attention. Source . For Cerebral Venous Sinus Thrombosis, we see a similar pattern as before, with OE &gt; 1 for ages below 50. . . . And as was the case before, we see that the OE ratio for ages below under 50 lies within the 95% confidence interval. . . . Embolic and thrombotic events . We will finally look at all embolic and thrombotic events. . Coagulation disorders are disruptions in the body’s ability to control blood clotting. Coagulation disorders can result in either a hemorrhage (too little clotting that causes an increased risk of bleeding) or thrombosis (too much clotting that causes blood clots to obstruct blood flow). Source . When looking at all embolic and thrombotic events, we have the same situation as before where OE &gt; 1 for age &lt; 50. . . . And as was the case before, we see that the OE ratio for ages below under 50 lies within the 95% confidence interval. . . . Conclusions . We can conclude that there is no strong evidence that the Astra Zeneca vaccine leads to adverse conditions, despite the fact that we are getting OE &gt; 1 for populations under 50. But it&#39;s important not to confuse absence of evidence with evidence of absence. What this means is that while we can&#39;t prove there is a link, we can&#39;t disprove it either, and the link may still exist. From a risk perspective, the risk is not zero. . But not taking a vaccine also has a risk: a quarter of people who end up in intensive care with Covid have some form of clot resulting from the virus (Source). The vaccine is objectively saving hundreds of thousands of lives at the moment, and that is why, after clinical trials passed, the burden of proof falls into proving it is not safe and not the other way around. . You can think of this logic as analogous to the presumption of innocence. While we may risk having guilty people running around in our society, the risk of a totalitarian state where this is not required is greater. So for the moment, the Astra Zeneca Covid-19 vaccine is innocent until proven otherwise. .",
            "url": "https://molinsp.github.io/datablog/jupyter/2021/04/01/Astra_Zeneca_Covid.html",
            "relUrl": "/jupyter/2021/04/01/Astra_Zeneca_Covid.html",
            "date": " • Apr 1, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Best footbal transactions 2015-2020",
            "content": "Summary . The following article outlines a methodology to identify the best among the top football transactions between 2015 and 2020. . Two different methodologies to define &quot;best&quot; are presented and discussed. For this exercise, data from the FIFA videogame to evaluate player performance and a list of football transactions by value from Wikipedia are used. . Load &amp; prepare data . Load FIFA dataset for all years . Description: This dataset from the FIFA video game includes an assessment of player skills in several categories and contextual information (club, left vs. right-footed, etc.). . Source: Kaggle Dataset Original data from sofifa.com . all = read_csv_folder( folder_path=&quot;FIFA_all_years&quot;, file_prefix=&quot;players_&quot;, file_col_name=&quot;year&quot;) . all = all.astype( dtype={&quot;year&quot; : &quot;int64&quot;}) . Set full year number . all[&quot;year&quot;] = all[&quot;year&quot;].add( other=2000) . year sofifa_id player_url short_name long_name age dob height_cm weight_kg nationality ... lwb ldm cdm rdm rwb lb lcb cb rcb rb . 0 2021 | 158023 | https://sofifa.com/player/158023/lionel-messi/... | L. Messi | Lionel Andrés Messi Cuccittini | 33 | 1987-06-24 | 170 | 72 | Argentina | ... | 66+3 | 65+3 | 65+3 | 65+3 | 66+3 | 62+3 | 52+3 | 52+3 | 52+3 | 62+3 | . 1 2021 | 20801 | https://sofifa.com/player/20801/c-ronaldo-dos-... | Cristiano Ronaldo | Cristiano Ronaldo dos Santos Aveiro | 35 | 1985-02-05 | 187 | 83 | Portugal | ... | 65+3 | 61+3 | 61+3 | 61+3 | 65+3 | 61+3 | 54+3 | 54+3 | 54+3 | 61+3 | . 2 2021 | 200389 | https://sofifa.com/player/200389/jan-oblak/210002 | J. Oblak | Jan Oblak | 27 | 1993-01-07 | 188 | 87 | Slovenia | ... | 32+3 | 36+3 | 36+3 | 36+3 | 32+3 | 32+3 | 33+3 | 33+3 | 33+3 | 32+3 | . 3 2021 | 188545 | https://sofifa.com/player/188545/robert-lewand... | R. Lewandowski | Robert Lewandowski | 31 | 1988-08-21 | 184 | 80 | Poland | ... | 64+3 | 65+3 | 65+3 | 65+3 | 64+3 | 61+3 | 60+3 | 60+3 | 60+3 | 61+3 | . 4 2021 | 190871 | https://sofifa.com/player/190871/neymar-da-sil... | Neymar Jr | Neymar da Silva Santos Júnior | 28 | 1992-02-05 | 175 | 68 | Brazil | ... | 67+3 | 62+3 | 62+3 | 62+3 | 67+3 | 62+3 | 49+3 | 49+3 | 49+3 | 62+3 | . 5 rows × 107 columns . Load the transactions from wikipedia . Description: This dataset lists the top largest transactions in football . Source: Wikipedia Page . Other details: Scraped using the following tool: wikitable2csv . transactions = pd.read_csv( filepath_or_buffer=&quot;BigTransactionsWikipedia.csv&quot;, sep=&quot;,&quot;, decimal=&quot;.&quot;) . Keep only relevant columns . transactions = transactions.filter( items=[&quot;Player&quot;,&quot;From&quot;,&quot;To&quot;,&quot;Fee(€ mln)&quot;,&quot;Year&quot;]) . Rename fields . transactions = transactions.rename( columns={&quot;Fee(€ mln)&quot; : &quot;fee&quot;, &quot;Year&quot; : &quot;transaction_year&quot;}) . Extract numbers from text data . transactions[&quot;fee&quot;] = transactions[&quot;fee&quot;].fdt.clean_text_column( mode=&quot;custom&quot;, keep_unmatched=False, regex=&quot;( d+)&quot;) . transactions[&quot;transaction_year&quot;] = transactions[&quot;transaction_year&quot;].fdt.clean_text_column( mode=&quot;custom&quot;, keep_unmatched=False, regex=&quot;( d+)&quot;) . transactions = transactions.astype( dtype={&quot;transaction_year&quot; : &quot;int64&quot;, &quot;fee&quot;: &quot;int64&quot;}) . Player From To fee transaction_year . 0 Neymar | Barcelona | Paris Saint-Germain | 222 | 2017 | . 1 Kylian Mbappé | Monaco | Paris Saint-Germain | 180 | 2018 | . 2 Philippe Coutinho | Liverpool | Barcelona | 145 | 2018 | . 3 João Félix | Benfica | Atlético Madrid | 126 | 2019 | . 4 Antoine Griezmann | Atlético Madrid | Barcelona | 120 | 2019 | . Use fuzzy matching to connect the data . The player names of the FIFA and the Wikipedia dataset do not match. For example, FIFA dataset uses Neymar da Silva Santos Júnior and the Wikipedia transaction dataset Neymar. To match the names that refer to the same player, fuzzy matching is used (using a library that leverages the concept of levenstein distance). . To do that, we first get the unique names from the FIFA dataset in a separate dataframe. . player_names = pd.DataFrame({&#39;fifa_name&#39; : all[&#39;long_name&#39;].unique()}).head(1000) . Pefrom fuzzy matching using a threshold of 60 (after a bit of trial and error) . matched_transactions = fuzzy_merge(transactions, right=player_names, left_on=&quot;Player&quot;, right_on=&quot;fifa_name&quot;, threshold=60, limit=1) . Transaction data with the FIFA name in a column called matches . Player From To fee transaction_year matches . 0 Neymar | Barcelona | Paris Saint-Germain | 222 | 2017 | Neymar da Silva Santos Júnior | . 1 Kylian Mbappé | Monaco | Paris Saint-Germain | 180 | 2018 | Kylian Mbappé Lottin | . 2 Philippe Coutinho | Liverpool | Barcelona | 145 | 2018 | Philippe Coutinho Correia | . 3 João Félix | Benfica | Atlético Madrid | 126 | 2019 | João Félix Sequeira | . 4 Antoine Griezmann | Atlético Madrid | Barcelona | 120 | 2019 | Antoine Griezmann | . Analysis A: Performance improvement after transaction . Assuming that the transactions were completed at a fair market value and future improvements were not priced in, the players&#39; score improvement can be used to rank the transactions. . score change = #score 2 years after transaction - #score transaction year . Get+2 year mark . Create +2y mark . matched_transactions[&quot;+2y&quot;] = matched_transactions[&quot;transaction_year&quot;].add( other=2) . Get yearly player score data . Get scores per year . year_scores = all.filter( items=[&quot;year&quot;,&quot;long_name&quot;,&quot;overall&quot;]) . year_scores = year_scores.rename( columns={ &quot;long_name&quot; : &quot;fifa_name&quot;, &quot;overall&quot; : &quot;score&quot;}) . year fifa_name score . 0 2021 | Lionel Andrés Messi Cuccittini | 93 | . 1 2021 | Cristiano Ronaldo dos Santos Aveiro | 92 | . 2 2021 | Jan Oblak | 91 | . 3 2021 | Robert Lewandowski | 91 | . 4 2021 | Neymar da Silva Santos Júnior | 91 | . Rename the matched column as fifa_name for easier matching . matched_transactions = matched_transactions.rename( columns={ &quot;matches&quot; : &quot;fifa_name&quot;}) . Merge the yearly player score data into the transactions table . Join with the score of the year of the transaction . transactions_with_scores = matched_transactions.merge( right=year_scores, how=&quot;left&quot;, left_on=[&quot;transaction_year&quot;,&quot;fifa_name&quot;], right_on=[&quot;year&quot;,&quot;fifa_name&quot;]) . transactions_with_scores = transactions_with_scores.rename( columns={&quot;year&quot; : &quot;year0&quot;, &quot;score&quot;: &quot;score_transaction_year&quot;}) . Join with the score of 2 years after the transaction . transactions_with_scores = transactions_with_scores.merge( right=year_scores, how=&quot;inner&quot;, left_on=[&quot;+2y&quot;,&quot;fifa_name&quot;], right_on=[&quot;year&quot;,&quot;fifa_name&quot;]) . transactions_with_scores = transactions_with_scores.rename( columns={&quot;score&quot; : &quot;score_+2y&quot;, &quot;score&quot;: &quot;score_+2y&quot;}) . Now we have the scores at the year of the transaction and two years later . Player From To fee transaction_year fifa_name +2y year0 score_transaction_year year score_+2y . 0 Neymar | Barcelona | Paris Saint-Germain | 222 | 2017 | Neymar da Silva Santos Júnior | 2019 | 2017.0 | 92.0 | 2019 | 92 | . 1 Kylian Mbappé | Monaco | Paris Saint-Germain | 180 | 2018 | Kylian Mbappé Lottin | 2020 | 2018.0 | 83.0 | 2020 | 89 | . 2 Philippe Coutinho | Liverpool | Barcelona | 145 | 2018 | Philippe Coutinho Correia | 2020 | 2018.0 | 86.0 | 2020 | 86 | . 3 João Félix | Benfica | Atlético Madrid | 126 | 2019 | João Félix Sequeira | 2021 | 2019.0 | 69.0 | 2021 | 81 | . 4 Antoine Griezmann | Atlético Madrid | Barcelona | 120 | 2019 | Antoine Griezmann | 2021 | 2019.0 | 89.0 | 2021 | 87 | . Calculate performance difference . transactions_with_scores = transactions_with_scores.dropna( axis=&quot;index&quot;, how=&quot;any&quot;, subset=[&quot;score_transaction_year&quot;,&quot;score_+2y&quot;]) . transactions_with_scores[&quot;score_delta&quot;] = transactions_with_scores[&quot;score_+2y&quot;].subtract( other=transactions_with_scores[&quot;score_transaction_year&quot;]) . transactions_with_scores = transactions_with_scores.sort_values( by=&quot;score_delta&quot;, ascending=False) . transactions_with_scores[&#39;transaction name&#39;] = transactions_with_scores[&#39;Player&#39;] + &#39;-&#39; + transactions_with_scores[&#39;transaction_year&#39;].apply(lambda x: str(int(x))) . Player From To fee transaction_year fifa_name +2y year0 score_transaction_year year score_+2y score_delta transaction name . 3 João Félix | Benfica | Atlético Madrid | 126 | 2019 | João Félix Sequeira | 2021 | 2019.0 | 69.0 | 2021 | 81 | 12.0 | João Félix-2019 | . 33 Alisson | Roma | Liverpool | 62 | 2018 | Alisson Ramsés Becker | 2020 | 2018.0 | 80.0 | 2020 | 89 | 9.0 | Alisson-2018 | . 21 Frenkie de Jong | Ajax | Barcelona | 75 | 2019 | Frenkie de Jong | 2021 | 2019.0 | 77.0 | 2021 | 85 | 8.0 | Frenkie de Jong-2019 | . 13 Virgil van Dijk | Southampton | Liverpool | 84 | 2018 | Virgil van Dijk | 2020 | 2018.0 | 83.0 | 2020 | 90 | 7.0 | Virgil van Dijk-2018 | . 23 Kevin De Bruyne | VfL Wolfsburg | Manchester City | 75 | 2015 | Kevin De Bruyne | 2017 | 2015.0 | 81.0 | 2017 | 88 | 7.0 | Kevin De Bruyne-2015 | . Results . Assuming that transactions where completed at a fair market value, the score improvement of the players is a metric that can give us an idea of what has been the best transaction. . transactions_with_scores = transactions_with_scores.sort_values( by=&quot;score_delta&quot;, ascending=True) . According to this metric, Atlético de Madrid&#39;s purchase of João Félix&#39;s in 2019 was the best performing transaction (score change from 69 to 81), followed by Liverpool&#39;s purchase of Alisson in 2018 (score change from 80 to 89). . The least performing transactions according to this metric were Real Madrid&#39;s purchase of Eden Hazard (score change from 91 to 88), Barça&#39;s Griezmann (score change from 89 to 87) and Inter&#39;s Lukaku (score change from 87 to 85). . HTML(px.bar(transactions_with_scores, template=&quot;seaborn&quot;, y=&quot;transaction name&quot;, x=&quot;score_delta&quot;, title=&quot;Score increase after a given transaction&quot;, labels={&quot;score_delta&quot; : &quot;Δ fifa score after 2 yers&quot;}, height=1000).to_html(include_plotlyjs=&#39;cdn&#39;)) . . . Analysis B: Calculate performance in years after purchase . Given countless evidence of how irrational humans are, it&#39;s fair to assume that the purchase price is not always a reasonable market price. . In that case, how could one determine the best deals? One potential metric is value delivery for money invested. Notice this is not only your classical value for money, given value is not a static parameter here, and it changes every year. . avg. value delivered = SUM(value) for each year after purchase / #year . Match the club name . To get the performance of the players before joining a club, we need to again have the same values in the club column, i.e. match Barcelona with FC Barcelona. . clubs = pd.DataFrame({&#39;club_name&#39; : all[&#39;club_name&#39;].unique()}).head(2000) . Match the name of the buyer club as it is in the FIFA in a new column . matched_transactions = fuzzy_merge(matched_transactions, clubs, &#39;To&#39;, &#39;club_name&#39;, threshold=60, limit=1) . matched_transactions = matched_transactions.rename( columns={&quot;matches&quot; : &quot;buyer_club&quot;}) . Player From To fee transaction_year fifa_name +2y buyer_club . 0 Neymar | Barcelona | Paris Saint-Germain | 222 | 2017 | Neymar da Silva Santos Júnior | 2019 | Paris Saint-Germain | . 1 Kylian Mbappé | Monaco | Paris Saint-Germain | 180 | 2018 | Kylian Mbappé Lottin | 2020 | Paris Saint-Germain | . 2 Philippe Coutinho | Liverpool | Barcelona | 145 | 2018 | Philippe Coutinho Correia | 2020 | FC Barcelona | . 3 João Félix | Benfica | Atlético Madrid | 126 | 2019 | João Félix Sequeira | 2021 | Atlético Madrid | . 4 Antoine Griezmann | Atlético Madrid | Barcelona | 120 | 2019 | Antoine Griezmann | 2021 | FC Barcelona | . Get yearly performance &amp; club info . performance_time_club = all.filter( items=[&quot;year&quot;,&quot;long_name&quot;,&quot;overall&quot;,&quot;club_name&quot;,&quot;value_eur&quot;]) . performance_time_club = performance_time_club.rename( columns={&quot;year&quot; : &quot;score_year&quot;, &quot;long_name&quot; : &quot;fifa_name&quot;, &quot;overall&quot; : &quot;score&quot;}) . score_year fifa_name score club_name value_eur . 0 2021 | Lionel Andrés Messi Cuccittini | 93 | FC Barcelona | 67500000 | . 1 2021 | Cristiano Ronaldo dos Santos Aveiro | 92 | Juventus | 46000000 | . 2 2021 | Jan Oblak | 91 | Atlético Madrid | 75000000 | . 3 2021 | Robert Lewandowski | 91 | FC Bayern München | 80000000 | . 4 2021 | Neymar da Silva Santos Júnior | 91 | Paris Saint-Germain | 90000000 | . Merge with performance . For each of the transactions, get all the performance rows for the same player . matched_transactions = matched_transactions.merge( right=performance_time_club, how=&quot;inner&quot;, left_on=[&quot;fifa_name&quot;], right_on=[&quot;fifa_name&quot;]) . Player From To fee transaction_year fifa_name +2y buyer_club score_year score club_name value_eur . 0 Neymar | Barcelona | Paris Saint-Germain | 222 | 2017 | Neymar da Silva Santos Júnior | 2019 | Paris Saint-Germain | 2021 | 91 | Paris Saint-Germain | 90000000 | . 1 Neymar | Barcelona | Paris Saint-Germain | 222 | 2017 | Neymar da Silva Santos Júnior | 2019 | Paris Saint-Germain | 2020 | 92 | Paris Saint-Germain | 105500000 | . 2 Neymar | Barcelona | Paris Saint-Germain | 222 | 2017 | Neymar da Silva Santos Júnior | 2019 | Paris Saint-Germain | 2018 | 92 | Paris Saint-Germain | 123000000 | . 3 Neymar | Barcelona | Paris Saint-Germain | 222 | 2017 | Neymar da Silva Santos Júnior | 2019 | Paris Saint-Germain | 2019 | 92 | Paris Saint-Germain | 118500000 | . 4 Neymar | Barcelona | Paris Saint-Germain | 222 | 2017 | Neymar da Silva Santos Júnior | 2019 | Paris Saint-Germain | 2017 | 92 | FC Barcelona | 109000000 | . Get relevant datapoints after the transactions . Keep only the performance for the years after a transaction, i.e. the value delivered to the buying club . matched_transactions = matched_transactions.query(&quot;transaction_year&gt;=2015&quot;) . matched_transactions[&#39;afer_purchase&#39;] = matched_transactions.eval(&quot;buyer_club==club_name &amp; score_year &gt;= transaction_year&quot;) . matched_transactions = matched_transactions.query(&quot;afer_purchase==True&quot;, engine=&quot;python&quot;).copy() . matched_transactions[&#39;transaction name&#39;] = matched_transactions[&#39;Player&#39;] + &#39;-&#39; + matched_transactions[&#39;transaction_year&#39;].apply(lambda x: str(int(x))) . Final calculation . perf_after_transaction = matched_transactions.fdt.pivot_table( index=[&quot;transaction name&quot;,&quot;transaction_year&quot;,&quot;fee&quot;], index_type=&quot;flat&quot;, aggfunc={&quot;score&quot; : [&quot;sum&quot;,&quot;size&quot;]}) . perf_after_transaction[&#39;avg_performance&#39;] = perf_after_transaction[&#39;score_sum&#39;]/perf_after_transaction[&#39;score_size&#39;] . perf_after_transaction[&#39;perf_per_eur&#39;] = perf_after_transaction[&#39;avg_performance&#39;] / perf_after_transaction[&#39;fee&#39;] . Result . Sort data . perf_after_transaction = perf_after_transaction.sort_values( by=&quot;perf_per_eur&quot;, ascending=True) . It is not uncommon for companies to try several &quot;models&quot; of the world. One of the reasons is to be able to capture different nuances and perspectives. . Sometimes, different models agree, and in this case, we see the purchase of Alisson by Liverpool in 2018 as a very well-performing transaction. But João Félix Sequeira, which we previously saw as the best transaction, did not perform that well under this metric, which helps us understand it was a good but expensive deal. . . . Caveats and discussion . While some players stay in the new club for several years, others may be transferred after just a couple of seasons. To control for this, we need to normalize by the number of years the player stays. . An even better metric would be the net price per total performance delivered. This metric would consider the net price, i.e., the value of the purchase minus the sale value. But given the restricted time range of the dataset (2015-2021), we have very little data about actual sales at market values and thus decided not to pursue this analysis. .",
            "url": "https://molinsp.github.io/datablog/jupyter/2021/02/24/FIFA_analysis_of_best_transactions.html",
            "relUrl": "/jupyter/2021/02/24/FIFA_analysis_of_best_transactions.html",
            "date": " • Feb 24, 2021"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "I’m an inventor with broad experience and skills around product innovation and data analytics. Some of the things I have done: Patented an innovative ski-touring system in college, published research in robotics, developed autonomous drone swarms, worked in a social-enterprise startup in Zambia, consulted with a large-scale government project in Rwanda, advised C-level executives on digital transformation and led product teams for one of the largest international education non-profits and the leading artificial-intelligence startup in the tanker shipping market. . .",
          "url": "https://molinsp.github.io/datablog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://molinsp.github.io/datablog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}